pipeline {
    agent any

    environment {
        REMOTE_USER = 'yaop'                    // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–π VM
        REMOTE_HOST = '127.0.0.1'            // IP-–∞–¥—Ä–µ—Å —É–¥–∞–ª—ë–Ω–Ω–æ–π VM
        SSH_CREDENTIALS_ID = 'ssh-key-jenkins'    // ID SSH-–∫–ª—é—á–∞, –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –≤ Jenkins
        APACHE_LOG_PATH = '/var/log/apache2/access.log'
    }

    stages {
        stage('Install Apache on Remote VM') {
            steps {
                script {
                    echo "üõ∞Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache2 –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–π –º–∞—à–∏–Ω–µ..."
                    sshagent (credentials: [SSH_CREDENTIALS_ID]) {
                        sh """
                            ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST \\
                            'sudo apt-get update && sudo apt-get install -y apache2'
                        """
                    }
                }
            }
        }

        stage('Check Apache Logs for Errors') {
            steps {
                script {
                    echo "üìÑ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ Apache –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ 4xx –∏ 5xx..."
                    sshagent (credentials: [SSH_CREDENTIALS_ID]) {
                        sh """
                            ssh $REMOTE_USER@$REMOTE_HOST \\
                            "grep -E 'HTTP/1\\.[01]\" [45][0-9]{2}' $APACHE_LOG_PATH | tee apache_errors.log"
                        """
                    }
                }
            }
        }

        stage('Archive Error Logs') {
            steps {
                script {
                    echo "üì¶ –ê—Ä—Ö–∏–≤–∞—Ü–∏—è –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫..."
                    sh "mkdir -p logs"
                    sshagent (credentials: [SSH_CREDENTIALS_ID]) {
                        sh "scp $REMOTE_USER@$REMOTE_HOST:apache_errors.log logs/"
                    }
                    archiveArtifacts artifacts: 'logs/apache_errors.log', allowEmptyArchive: true
                }
            }
        }
    }

    post {
        always {
            echo '‚úÖ Pipeline –∑–∞–≤–µ—Ä—à—ë–Ω.'
        }
    }
}
